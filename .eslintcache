[{"E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\index.js":"1","E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\App.js":"2","E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\main\\TopBar.js":"3","E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\main\\InfoCards.js":"4","E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\main\\Map.js":"5","E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\main\\InfoCard.js":"6","E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\utilities.js":"7","E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\sideinfo\\LiveCasesList.js":"8"},{"size":225,"mtime":1610163464793,"results":"9","hashOfConfig":"10"},{"size":5545,"mtime":1610331528140,"results":"11","hashOfConfig":"10"},{"size":1050,"mtime":1610251313648,"results":"12","hashOfConfig":"10"},{"size":1761,"mtime":1610267968296,"results":"13","hashOfConfig":"10"},{"size":2416,"mtime":1610330616989,"results":"14","hashOfConfig":"10"},{"size":3628,"mtime":1610268018085,"results":"15","hashOfConfig":"10"},{"size":112,"mtime":1610204998159,"results":"16","hashOfConfig":"10"},{"size":623,"mtime":1610332623763,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"7dd73t",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\index.js",[],["36","37"],"E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\App.js",["38"],"E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\main\\TopBar.js",[],"E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\main\\InfoCards.js",[],"E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\main\\Map.js",["39","40"],"E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\main\\InfoCard.js",["41"],"import React from 'react';\r\nimport { motion, animate } from 'framer-motion';\r\nimport { Sparklines, SparklinesSpots, SparklinesLine } from 'react-sparklines';\r\nimport { capitalize } from '../../utilities';\r\nimport numeral from 'numeral';\r\n\r\nfunction InfoCard({\r\n  color,\r\n  typeName,\r\n  animateCardStyle,\r\n  setAnimateCardStyle,\r\n  cardNumber,\r\n  info,\r\n  history,\r\n  setSelectedType,\r\n}) {\r\n  const changeAnimateCardStyle = () => {\r\n    // Change Animate Card style\r\n    setAnimateCardStyle({\r\n      backgroundColor: color,\r\n      transform: `translateX(${cardNumber * 100}%)`,\r\n    });\r\n  };\r\n\r\n  // Get Active History\r\n  const getActiveHistory = () => {\r\n    const confirmedHistory = Object.values(history.cases || {});\r\n    const deathsHistory = Object.values(history.deaths || {});\r\n    const recoveredHistory = Object.values(history.recovered || {});\r\n    // // Calculate active history from each data of confirmed, deaths & recovered history\r\n    const activeHistory = confirmedHistory.map((c, index) => {\r\n      return c - (recoveredHistory[index] + deathsHistory[index]);\r\n    });\r\n\r\n    return activeHistory;\r\n  };\r\n\r\n  // Get historical data of current data type - confirmed, active,\r\n  // recovered, deaths.\r\n  const getHistoricalData = () => {\r\n    let dataType = typeName === 'confirmed' ? 'cases' : typeName.toLowerCase();\r\n\r\n    // history object has cases, deaths & recovered properties but not active\r\n    // So we have to check for active type also.\r\n    if (history[dataType] || typeName === 'active') {\r\n      // if history[dataType] is undefined, then it's active type\r\n      const values = history[dataType]\r\n        ? Object.values(history[dataType])\r\n        : getActiveHistory();\r\n\r\n      const maxValue = values.sort((a, b) => b - a)[0];\r\n      const result = [];\r\n\r\n      // For each value, get the percentage of value with respect to the\r\n      // highest value of the data and push it to the result array\r\n      values.forEach((val) => result.push(~~((val / maxValue) * 100)));\r\n\r\n      return result;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Get Today's incremented value i.e. incremented cases, death, active & recovered\r\n  const getTodayIncremented = () => {\r\n    if (info) {\r\n      const value = info[`today${capitalize(typeName)}`];\r\n      return value > 0 ? numeral(value).format('+0,0') : '+0';\r\n    }\r\n    return '+0';\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className={`info-card`}\r\n      style={{ color: color }}\r\n      onClick={() => {\r\n        changeAnimateCardStyle();\r\n        setSelectedType(typeName);\r\n      }}>\r\n      {/* Animate card show if animateStyle is defined */}\r\n      {animateCardStyle ? (\r\n        <motion.div\r\n          className='animate-card'\r\n          animate={animateCardStyle}></motion.div>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {/* Card infomations */}\r\n      <strong className='info-card__name'>{typeName}</strong>\r\n      <p className='info-card__incremented'>{getTodayIncremented()}</p>\r\n      <p className='info-card__main-value'>\r\n        {info ? numeral(info[typeName]).format('0, 0') : ''}\r\n      </p>\r\n      <div className='graph'>\r\n        <Sparklines\r\n          data={getHistoricalData()}\r\n          limit={getHistoricalData().length}\r\n          style={{ width: '100%' }}\r\n          width={40}\r\n          height={30}\r\n          margin={6}>\r\n          <SparklinesLine\r\n            color={color}\r\n            style={{ strokeWidth: 1, fill: 'none' }}\r\n          />\r\n          <SparklinesSpots size={1} style={{ stroke: color, fill: 'white' }} />\r\n        </Sparklines>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default InfoCard;\r\n","E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\utilities.js",[],"E:\\Files\\Works\\React Project\\covid-19-tracker\\src\\components\\sideinfo\\LiveCasesList.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":158,"column":6,"nodeType":"48","endLine":158,"endColumn":23,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"54","line":1,"column":28,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"50","severity":1,"message":"55","line":2,"column":18,"nodeType":"52","messageId":"53","endLine":2,"endColumn":25},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countriesInfo'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'animate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [countriesInfo, selectedCountry]",{"range":"61","text":"62"},[4315,4332],"[countriesInfo, selectedCountry]"]